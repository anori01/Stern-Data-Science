{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Assignment 2a: Variables, Data Types, Data Structures"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### (2pts) A. Create a variable named `greeting` that contains the string 'hello world'. Print the variable `greeting`."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "greeting='hello world'\n",
    "print(greeting)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### (4pts) B. You are given the string below that contains all the letters of the alphabet in order. Using indexing and slicing methods, do the following:\n",
    "\n",
    "* Print the first letter of the alphabet\n",
    "* Print the second letter of the alphabet\n",
    "* Print the 3rd to 10th letter of the alphabet (inclusive on both ends)\n",
    "* Print the last letter of the alphabet, using negative indexing\n",
    "* Print the last 10 letters of the alphabet, using negative indexing\n",
    "* Print the fist half of the alphabet; use the `len` command.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 73,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "first letter: A\n",
      "second letter: B\n",
      "third to tenth letter: CDEFGHIJ\n",
      "last letter: Z\n",
      "last 10 letters: QRSTUVWXYZ\n",
      "first half: ABCDEFGHIJKLM\n"
     ]
    }
   ],
   "source": [
    "alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n",
    "print(\"first letter:\",alphabet[0]) # first letter\n",
    "print(\"second letter:\",alphabet[1]) # second letter\n",
    "print(\"third to tenth letter:\",alphabet[2:10]) # third(C) to tenth(J) letter\n",
    "print(\"last letter:\",alphabet[-1]) # last letter\n",
    "print(\"last 10 letters:\",alphabet[-10:]) # last 10 letters\n",
    "mid = int(len(alphabet)/2)\n",
    "print(\"first half:\",alphabet[:mid]) # first half"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### (4pts) C. You are given the height of someone in centimeters. You need to convert it into feet and inches. (Each foot is 30.48 cm. Each inch is 2.54cm. Use variables to store these quantities.). Print the number of feet as an integer, and the number of inches as a decimal with one decimal point."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "A height of 175 cm is 5 feet and 8.9 inches\n"
     ]
    }
   ],
   "source": [
    "height = 175 #in cm\n",
    "cm_per_ft = 30.48\n",
    "cm_per_in = 2.54\n",
    "feet = int(175/cm_per_ft)\n",
    "inches = (height-feet*cm_per_ft)/cm_per_in\n",
    "print(\"A height of {hcm} cm is {f} feet and {i:.1f} inches\".format(hcm=height, f=feet, i=inches))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### (4pts) D. The Pythagorean Theorem\n",
    "\n",
    "If $a$ and $b$ are the lengths of the two short sides of a right triangle and $c$ is its long side then:\n",
    "\n",
    "$a^2 + b^2 = c^2$\n",
    "\n",
    "You are given a right triangle with side $a=10$ long and side $b=20$ long. How long is side $c$? (Hint: use the math.sqrt function to compute the square root.)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 77,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Length of c is: 22.36\n"
     ]
    }
   ],
   "source": [
    "import math\n",
    "# print(math.sqrt(2))\n",
    "\n",
    "a = 10\n",
    "b = 20\n",
    "c = math.sqrt(a**2+b**2)\n",
    "print(\"Length of c is: {c:.2f}\".format(c=c))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "###### The Pythagorean Theorem (cont)\n",
    "\n",
    "Conversely, if the formula $a^2 + b^2 = c^2$ holds then a triangle whose sides have length $a$, $b$ and $c$ is a right triangle. You are given below the lengths of the sides of 3 triangles. Write  the boolean expression that checks if the triangle is a right triangle. Assume that `c` is always the longest side.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Is the triangle right? False\n"
     ]
    }
   ],
   "source": [
    "# Triangle 1\n",
    "a = 10\n",
    "b = 20\n",
    "c = 30\n",
    "isright = (a**2+b**2==c**2)\n",
    "print(\"Is the triangle right?\", isright)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Is the triangle right? True\n"
     ]
    }
   ],
   "source": [
    "# Triangle 2\n",
    "a = 15\n",
    "b = 112\n",
    "c = 113\n",
    "isright = (a**2+b**2==c**2)\n",
    "print(\"Is the triangle right?\", isright)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Is the triangle right? False\n"
     ]
    }
   ],
   "source": [
    "# Triangle 3\n",
    "a = 96\n",
    "b = 247\n",
    "c = 255\n",
    "isright = (a**2+b**2==c**2)\n",
    "print(\"Is the triangle right?\", isright)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### (4pts) E. Write Boolean expressions for the following.\n",
    "\n",
    "* Can a student graduate? A student can graduate after completing at least 120 credits, and has registered for at least 6 semesters ."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 70,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Can a student who completed 100 credits and registered for 6 semesters graduate? False\n"
     ]
    }
   ],
   "source": [
    "semesters = 6 # fill your value\n",
    "credits = 100 # fill your value\n",
    "cangraduate = (credits>=120 and semesters>=6)\n",
    "print(\"Can a student who completed {c} credits and registered for {s} semesters graduate? {t}\".\n",
    "      format(s=semesters, c=credits, t=cangraduate))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "* Can I register today? A student can register on Monday if Senior, on Tuesday if Junior, on Wednesday if Sophomore, and on Thursday if Freshman."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 68,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Can a Senior register on Tuesday? False\n"
     ]
    }
   ],
   "source": [
    "status = 'Senior' #also 'Junior', 'Sophomore', 'Freshman'\n",
    "days = 'Tuesday' #also 'Monday', 'Tuesday', 'Wednesday', 'Thurday', 'Friday', 'Saturday'\n",
    "register = (status == 'Senior' and days == 'Monday') or \\\n",
    "           (status == 'Junior' and days == 'Tuesday') or \\\n",
    "           (status == 'Sophomore' and days == 'Wednesday') or \\\n",
    "           (status == 'Freshman' and days == 'Thursday') \n",
    "print(\"Can a {s} register on {d}? {t}\".format(s=status, d=day, t=register))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### (4pts) F. Compute and print both roots of the quadratic equation x^2-5.86\\*x+8.5408.\n",
    "\n",
    "Hint: recall that the roots of a quadratic equation $a \\cdot x^2+ b \\cdot x+c$ are $x = \n",
    "\\frac{−b ± \\sqrt{b^2 − 4 \\cdot a \\cdot c}}{ 2 \\cdot a}$\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Solution 1: 3.140\n",
      "Solution 2: 2.720\n"
     ]
    }
   ],
   "source": [
    "import math\n",
    "a = 1\n",
    "b = -5.86\n",
    "c = 8.5408\n",
    "x1 = (-b + math.sqrt(b**2 - 4*a*c))/(2*a)\n",
    "print(\"Solution 1: {x:.3f}\".format(x=x1))\n",
    "x2 = (-b - math.sqrt(b**2 - 4*a*c))/(2*a)\n",
    "print(\"Solution 2: {x:.3f}\".format(x=x2))\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### (6pts) G. The students received their grades for a midterm exam, in the form of lists. The list contains the score each student received, for each question in the midterm. However, the professor was so absent minded that he forgot to sum up the points to compute the overall grade for each student.\n",
    "\n",
    "* (1pts) How many questions were in the midterm?\n",
    "* (1pts) Write code to compute the overall grade of each student. Add the overall in a new list called `grades`.\n",
    "* (4pts) Compute the maximum, minimum, average, and median grade among the overall student grades."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "studentA = [5, 2, 3, 1, 2, 4, 5, 5, 1, 1]\n",
    "studentB = [1, 2, 5, 5, 2, 0, 1, 5, 5, 2]\n",
    "studentC = [2, 5, 5, 5, 5, 0, 1, 3, 1, 0]\n",
    "studentD = [0, 1, 0, 5, 2, 5, 1, 3, 3, 5]\n",
    "studentE = [5, 4, 5, 5, 1, 5, 1, 4, 4, 5]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "10"
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# How many questions were in the midterm?\n",
    "questions = len(studentA)\n",
    "questions"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 79,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[25, 27, 28, 29, 39]"
      ]
     },
     "execution_count": 79,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Write code to compute the overall grade of each student. Add the overall in a new list called grades.\n",
    "gA = sum(studentA)\n",
    "gB = sum(studentB)\n",
    "gC = sum(studentC)\n",
    "gD = sum(studentD)\n",
    "gE = sum(studentE)\n",
    "\n",
    "grades = []\n",
    "grades.append(gA)\n",
    "grades.append(gB)\n",
    "grades.append(gC)\n",
    "grades.append(gD)\n",
    "grades.append(gE)\n",
    "sorted(grades)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "39"
      ]
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Compute the maximum among the overall student grades.\n",
    "maximum = max(grades)\n",
    "maximum"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "25"
      ]
     },
     "execution_count": 37,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Compute the minimum among the overall student grades.\n",
    "minimum = min(grades)\n",
    "minimum"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "29.6"
      ]
     },
     "execution_count": 38,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Compute the average among the overall student grades.\n",
    "average = sum(grades)/len(grades)\n",
    "average"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 84,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "28"
      ]
     },
     "execution_count": 84,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Compute the median grade among the overall student grades.\n",
    "median_pos = int((len(grades)-1)/2)\n",
    "median = sorted(grades)[median_pos]\n",
    "median"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### (12pts) H.  You are given two articles below, regarding North and South Korea. The `article1` is from [Reuters](http://www.reuters.com/article/us-un-assembly-southkorea-northkorea-idUSKCN11T04N) and `article2` is from [Korea Herald](http://www.koreaherald.com/view.php?ud=20160923000173).\n",
    "\n",
    "* (1pts) Compute the length of each article in characters.\n",
    "* (1pts) Compute the length of each article length in words.\n",
    "* (1pts) Compute the length of each article in sentences. Assume that the period `.` is the separator between sentences.\n",
    "* (1pts) What is the average length of each sentence in words, for each article?\n",
    "* (1pts) How many distinct words appear in each of the two articles? Convert the articles to lowercase before the calculation.\n",
    "* (2pts) Is `Obama` mentioned in `article1`? Is `Obama` mentioned in `article2`?\n",
    "* (2pts) How many times is `Korea` mentioned in in `article1` and how many times in `article2`?\n",
    "* (3pts) Compute the Jaccard similarity between `article1` and `article2`  "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "article1 = \"\"\"South Korean Foreign Minister Yun Byung-se accused North Korea on Thursday of \"totally ridiculing\" the authority of the United Nations through its nuclear and missile tests and said it was time to reconsider whether it was qualified for U.N. membership. In an address to the annual United Nations General Assembly, Yun said the U.N. security Council should adopt \"stronger, comprehensive\" sanctions on North Korea after its fifth nuclear test on Sept. 9 and close loopholes in existing measures. \"North Korea's repeated violations and non-compliance of Security Council resolutions and international norms is unprecedented and has no parallel in the history of the U.N.,\" Yun said. \"North Korea is totally ridiculing the authority of the General Assembly and the Security Council,\" he said. \"Therefore, I believe it is high time to seriously reconsider whether North Korea is qualified as a peace-loving U.N. member, as many countries are already questioning.\" Yun said North Korea had not only advanced its nuclear and missile capacity, but publicly threatened to use those weapons preemptively. He said it was the \"last chance\" to put a brake on its nuclear ambitions. Yun also called for action against North Korea's violations of the rights of its own people, and said there should be greater focus on North Korean workers abroad and the possible diversion of their wages to weapons programs.Discussions are already under way on a possible new U.N. sanctions resolution on North Korea after its latest nuclear test. Analysts and diplomats say much depends on China's attitude. China is North Korea's main ally, but has been angered by its repeated missile and nuclear tests and backed tough U.N. sanctions on Pyongyang in March. At the same time, it has repeatedly called for a return to international talks to resolve the issue, in spite of the skepticism of other world powers. Chinese Premier Li Keqiang told the General Assembly on Wednesday countries must remain committed to denuclearization of the Korean peninsula, while seeking a solution to the North Korean nuclear issue through dialogue. The United States said Li and U.S. President Barack Obama agreed in New York on Monday to step up cooperation in the U.N. Security Council and in law enforcement channels Japanese Prime Minister Shinzo Abe said on Wednesday the threat posed by North Korea was \"substantially more serious\" than in the past and demanded an \"entirely distinct\" response.\"\"\"\n",
    "article2 = \"\"\"The UN Security Council should go beyond simply discussing North Korea's human rights violations and take \"meaningful action,\" South Korean Foreign Minister Yun Byung-se said Thursday, as the council is considering fresh sanctions on Pyongyang for its fifth nuclear test. Yun made the remark during a meeting with South Korean correspondents in New York, saying the North's human rights abuses will be one of the key focuses of an address he was scheduled to deliver at the UN General Assembly later in the day. Yun said it makes no sense for the North to ask for international aid to cope with the aftermath of a massive flood after wasting money on a nuclear test. \"North Korea cares nothing about people's hardships while wasting an enormous amount of money. I will strongly point out these dual attitudes and the North's disregard for human rights at the United Nations,\" Yun told reporters Yun's remarks came as the Security Council has been working on new sanctions on the North for its Sept. 9 nuclear test, and suggest that a new sanctions package could include measures with regard to Pyongyang's human rights violations. A senior government official also said on condition of anonymity that the Security Council might impose sanctions not only over the North's nuclear and missile programs, but also over its human rights abuses. The official spoke on condition of anonymity. The official also said a new sanctions resolution is expected to be adopted in a shorter period of time than after the North's fourth nuclear test in January when it took 57 days to adopt a resolution. \"I expect an additional resolution will be adopted within a reasonable period of time,\" the official said. The official also said that the previous resolution, considered the toughest sanctions on the North ever, is having considerable effects on the North. The US is also expected to take additional unilateral sanctions on Pyongyang, too, the official said. The official said it's not the right time to hold negotiations with the North because it could justify the North's bad behavior. The UN General Assembly adopted a landmark resolution calling for referring the issue to the International Criminal Court for two years in a row in 2014 and last year. Under the resolutions, the Security Council also held discussions on the issue twice. While in New York, Yun said he has held meetings with various US figures that could lead the security and foreign policy in the next US administration. He did not provide further specifics, including who those people were, and which campaign they're with. Yun said that he stressed in those meetings that the Korea-US alliance is a key pillar in the Asia-Pacific region and a core point of the rebalancing toward Asia-Pacific, and that the Korea-US free trade agreement has contributed greatly to enhancing mutual interests of the two countries.\"\"\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Number of characters in article1 2455\n",
      "Number of characters in article2 2876\n"
     ]
    }
   ],
   "source": [
    "# Compute the length of each article in characters.\n",
    "print(\"Number of characters in article1:\", len(article1))\n",
    "print(\"Number of characters in article2:\", len(article2))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 74,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Number of words in article1: 393\n",
      "Number of words in article2: 476\n"
     ]
    }
   ],
   "source": [
    "# Compute the length of each article length in words.\n",
    "print(\"Number of words in article1:\",len(article1.split()))\n",
    "print(\"Number of words in article2:\",len(article2.split()))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "32\n",
      "19\n"
     ]
    }
   ],
   "source": [
    "# Compute the length of each article in sentences. Assume that the period . is the separator between sentences.\n",
    "print(len(article1.split('.')))\n",
    "print(len(article2.split('.')))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Average sentence length for article1 is 12.28 words/sentence\n",
      "Average sentence length for article2 is 25.05 words/sentence\n"
     ]
    }
   ],
   "source": [
    "# What is the average length of each sentence in words, for each article?\n",
    "words1 = len(article1.split())\n",
    "sents1 = len(article1.split('.'))\n",
    "print(\"Average sentence length for article1 is {w:.2f} words/sentence\".format(w=words1/sents1))\n",
    "words2 = len(article2.split())\n",
    "sents2 = len(article2.split('.'))\n",
    "print(\"Average sentence length for article2 is {w:.2f} words/sentence\".format(w=words2/sents2))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Article1 has 208 distinct words\n",
      "Article2 has 241 distinct words\n"
     ]
    }
   ],
   "source": [
    "# How many distinct words appear in each of the two articles? Convert the articles to lowercase before the calculation.\n",
    "dwords1 = len(set(article1.lower().split()))\n",
    "dwords2 = len(set(article2.lower().split()))\n",
    "print(\"Article1 has {w:d} distinct words\".format(w=dwords1))\n",
    "print(\"Article2 has {w:d} distinct words\".format(w=dwords2))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Is Obama mentioned in article1? True\n",
      "Is Obama mentioned in article2? False\n"
     ]
    }
   ],
   "source": [
    "# Is Obama mentioned in article1? Is Obama mentioned in article2?\n",
    "print(\"Is Obama mentioned in article1?\", \"Obama\" in article1)\n",
    "print(\"Is Obama mentioned in article2?\", \"Obama\" in article2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "How many times is Korea mentioned in article1? 14\n",
      "How many times is Korea mentioned in article1? 6\n"
     ]
    }
   ],
   "source": [
    "# How many times is Korea mentioned in in article1 and how many times in article2?\n",
    "# Notice that this will also count \"Korean\" etc. If we want to avoid that, we can add \n",
    "# a space character and look for \"Korea \" instead of looking for \"Korea\"\n",
    "print(\"How many times is Korea mentioned in article1?\", article1.count(\"Korea\"))\n",
    "print(\"How many times is Korea mentioned in article1?\", article2.count(\"Korea\"))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The Jaccard similarity is 17.54%\n"
     ]
    }
   ],
   "source": [
    "# Compute the Jaccard similarity between article1 and article2\n",
    "w1 = set(article1.lower().split())\n",
    "w2 = set(article2.lower().split())\n",
    "jaccard = len(w1 & w2) / len(w1 | w2)\n",
    "print(\"The Jaccard similarity is {j:.2%}\".format(j=jaccard))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.5.2"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 0
}
